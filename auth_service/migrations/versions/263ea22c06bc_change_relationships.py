"""empty message

Revision ID: 263ea22c06bc
Revises: 8cccfa0aa203
Create Date: 2023-01-18 17:53:35.271080

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '263ea22c06bc'
down_revision = '8cccfa0aa203'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('auth_history', schema='auth') as batch_op:
        batch_op.create_unique_constraint(None, ['id', 'device'])
        batch_op.drop_constraint('auth_history_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], referent_schema='auth', ondelete='CASCADE')

    with op.batch_alter_table('roles', schema='auth') as batch_op:
        batch_op.create_unique_constraint(None, ['id'])

    with op.batch_alter_table('user_role', schema='auth') as batch_op:
        batch_op.create_unique_constraint(None, ['id'])
        batch_op.drop_constraint('user_role_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], referent_schema='auth', ondelete='CASCADE')

    with op.batch_alter_table('users', schema='auth') as batch_op:
        batch_op.create_unique_constraint(None, ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema='auth') as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('user_role', schema='auth') as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('user_role_user_id_fkey', 'users', ['user_id'], ['id'], referent_schema='auth')
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('roles', schema='auth') as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('auth_history', schema='auth') as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('auth_history_user_id_fkey', 'users', ['user_id'], ['id'], referent_schema='auth')
        batch_op.drop_constraint(None, type_='unique')

    # ### end Alembic commands ###
